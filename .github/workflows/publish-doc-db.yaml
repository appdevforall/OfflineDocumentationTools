name: Release Documentation Database

permissions: write-all

on:
  push:
    tags:
      - 'db-*' # Trigger on tags like 'db-2024-03-21'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to get all tags for versioning

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y pngquant git

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Create virtual environment
        run: uv venv

      - name: Activate virtual environment
        run: source .venv/bin/activate

      - name: Install dependencies
        run: uv pip install -r requirements.txt

      - name: Create build directory
        run: mkdir -p build

      - name: Store Kotlin documentation
        run: |
          PYTHONPATH=scripts uv run python scripts/ingest.py -p build/documentation-${{ github.ref_name }}.sqlite -d SourceDocs/KotlinDocs/html
          PYTHONPATH=scripts uv run python scripts/ingest.py -p build/documentation-${{ github.ref_name }}.sqlite -d SourceDocs/KotlinDocs/html/images
          PYTHONPATH=scripts uv run python scripts/ingest.py -p build/documentation-${{ github.ref_name }}.sqlite -d SourceDocs/KotlinDocs/html/frontend
          PYTHONPATH=scripts uv run python scripts/ingest.py -p build/documentation-${{ github.ref_name }}.sqlite -f SourceDocs/KotlinDocs/kotlin-spec.pdf
          if [ ! -f "build/documentation-${{ github.ref_name }}.sqlite" ]; then
            echo "Failed to create database file"
            exit 1
          fi

      - name: Store Java documentation
        run: |
          for dir in $(find SourceDocs/JavaDocs/html -type d); do
            PYTHONPATH=scripts uv run python scripts/ingest.py -p build/documentation-${{ github.ref_name }}.sqlite -d "$dir"
          done

      - name: Store tooltips
        run: |
          PYTHONPATH=scripts uv run python scripts/import_tooltips.py -i SourceDocs/Tooltips/tooltips.xlsx -d build/documentation-${{ github.ref_name }}.sqlite

      - name: Verify database
        run: |
          if [ ! -f "build/documentation-${{ github.ref_name }}.sqlite" ]; then
            echo "Database file not found"
            exit 1
          fi
          # Add any additional verification steps here

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: build/documentation-${{ github.ref_name }}.sqlite
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
